// <auto-generated />
using System;
using BikesRent.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BikesRent.DataAccessLayer.Migrations
{
    [DbContext(typeof(BikesDbContext))]
    [Migration("20240208074121_ChnageTableNames")]
    partial class ChnageTableNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("BikesRent.DataAccessLayer.Entities.Bike", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsElectric")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Bikes");
                });

            modelBuilder.Entity("BikesRent.DataAccessLayer.Entities.RentHistory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BikeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BikeId");

                    b.HasIndex("UserId");

                    b.ToTable("RentHistories");
                });

            modelBuilder.Entity("BikesRent.DataAccessLayer.Entities.Subscription", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("RentLimit")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("BikesRent.DataAccessLayer.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("SubscriptionExpiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BikesRent.DataAccessLayer.Entities.RentHistory", b =>
                {
                    b.HasOne("BikesRent.DataAccessLayer.Entities.Bike", "Bike")
                        .WithMany("RentHistories")
                        .HasForeignKey("BikeId");

                    b.HasOne("BikesRent.DataAccessLayer.Entities.User", "User")
                        .WithMany("RentHistories")
                        .HasForeignKey("UserId");

                    b.Navigation("Bike");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BikesRent.DataAccessLayer.Entities.User", b =>
                {
                    b.HasOne("BikesRent.DataAccessLayer.Entities.Subscription", "Subscription")
                        .WithMany("Users")
                        .HasForeignKey("SubscriptionId");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("BikesRent.DataAccessLayer.Entities.Bike", b =>
                {
                    b.Navigation("RentHistories");
                });

            modelBuilder.Entity("BikesRent.DataAccessLayer.Entities.Subscription", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BikesRent.DataAccessLayer.Entities.User", b =>
                {
                    b.Navigation("RentHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
